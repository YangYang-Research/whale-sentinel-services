name: Build and Deploy Docker Images

on:
  push:
    branches:
      - main

jobs:
  detect-changes:
    name: Detect Changed Submodules
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repo with history and submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Fetch dev branch for comparison
        run: git fetch origin dev

      - name: Detect changed submodules and versions
        id: set-matrix
        run: |
          echo "{" > matrix.json
          echo '"include": [' >> matrix.json

          FIRST=true
          for dir in whale-sentinel-*; do
            if git diff --name-only origin/dev..HEAD -- "$dir" | grep -q .; then
              VERSION=$(git log origin/dev..HEAD --pretty=format:%s -- "$dir" | grep -i 'Release:' | tail -n1 | sed -E 's/.*Release:[ ]*//I')
              if [ -n "$VERSION" ]; then
                [ "$FIRST" = false ] && echo "," >> matrix.json
                FIRST=false
                echo "  {\"module\": \"$dir\", \"version\": \"$VERSION\"}" >> matrix.json
              fi
            fi
          done

          echo "]}" >> matrix.json
          echo "Detected matrix:"
          cat matrix.json
          echo "matrix=$(cat matrix.json | jq -c)" >> $GITHUB_OUTPUT

  build-and-push:
    name: Build and Push ${{ matrix.module }}
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: Checkout repo with submodules
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 | \
          docker login --username AWS --password-stdin public.ecr.aws

      - name: Build and push Docker image
        run: |
          IMAGE_BASE="public.ecr.aws/j8d4r7c5/whale-sentinel/whale-sentinel-services/${{ matrix.module }}"
          VERSION="${{ matrix.version }}"

          echo "Building image $IMAGE_BASE:$VERSION"

          docker build -t "$IMAGE_BASE:$VERSION" -t "$IMAGE_BASE:latest" "./${{ matrix.module }}"
          docker push "$IMAGE_BASE:$VERSION"
          docker push "$IMAGE_BASE:latest"
